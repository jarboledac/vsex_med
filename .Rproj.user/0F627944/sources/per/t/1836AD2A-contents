#Funciones gráficos SISC



bar_sisc <- function(datos, x_val, y_val, paleta = TRUE, title_name = "Sin titulo",
                        x_title = "Sin título", y_title = "Sin título", legend = "Sin titulo", 
                        order_bar = TRUE, rot_angel = 0, remove_x = FALSE, mov_y = 5){
  #
  #Diagram de barras para un conteo simple por cada categría, este incluye los colores del SISC
  #datos : dataframe con los datos a gráficar
  # x_val : variable eje x
  # y_val : variable eje y (Conteo)
  # paleta : TRUE si se usa la palate completa, FALSE si solo usamos un color
  # title_name : Título del gráfico
  # x_title : título del eje x
  # y_title : título del eje y
  # legend : título de la leyenda
  #order_bar : TRUE para organizar en orden descendente, FALSE no ordenar
  #
  if(order_bar == TRUE){
    ord <-reorder(x_val, -y_val)
  }else{
    ord <- x_val
  }
  if(remove_x == FALSE){
    axis_x <- element_text(angle = rot_angel)
  }else{
    axis_x <- element_blank()
  }
  if(paleta == TRUE){
  pal <- c('#191B4F','#1CA4C9','#511C71','#515151','#F9A61F','#178D4B','#AE3E92','#F77F11')
  ggplot(data = datos, aes(x = ord, y = y_val, fill = x_val)) + 
    geom_bar(stat = "identity")+
    ggtitle(title_name)+
    scale_fill_manual(values = pal)+
    scale_color_manual(values = pal)+
    geom_text(label= y_val, nudge_y = mov_y)+
    theme(plot.title = element_text(hjust = 0.5, vjust = 1,color = "black"), axis.text.x = axis_x)+
    xlab(x_title) + ylab(y_title)+
    labs(fill = legend)
  
  }else{
    pal <- c('#191B4F')
    ggplot(data = datos, aes(x = ord, y = y_val)) + 
      geom_bar(stat = "identity", fill = pal)+
      ggtitle(title_name)+
      xlab(x_title) + ylab(y_title)+
      geom_text(label= y_val, nudge_y = mov_y)+
      theme(plot.title = element_text(hjust = 0.5, vjust = 1,color = "black"), axis.text.x = axis_x)
  }

}



bar_cat_sisc <- function(datos, x_val, y_val, category, paleta = TRUE, title_name = "Sin titulo",
                              x_title = "Sin título", y_title = "Sin título", legend = "Sin titulo", 
                              order_bar = TRUE, reverse_bar = FALSE, mov_y = -2,rot_angel = 0, 
                         remove_x = FALSE, contg = FALSE){
  #
  #Diagram de barras para un conteo scon múltiples categrías, este incluye los colores del SISC
  #datos : dataframe con los datos a gráficar
  # x_val : variable eje x
  # y_val : variable eje y (Conteo)
  # category : categoría a desplegar por cada observación
  # paleta : TRUE si se usa la palate completa, FALSE si solo usamos un color
  # title_name : Título del gráfico
  # x_title : título del eje x
  # y_title : título del eje y
  # legend : título de la leyenda
  #order_bar : TRUE para organizar en orden descendente, FALSE no ordenar
  #
  if(remove_x == FALSE){
    axis_x <- element_text(angle = rot_angel)
  }else{
    axis_x <- element_blank()
  }
  if(contg == FALSE){
    distr_x <- geom_text(label = y_val,nudge_y = mov_y, color = "white")
    bar_dist <- geom_bar(stat = "identity", position = position_stack(reverse = reverse_bar))
  }else{
    distr_x <- geom_text(label = y_val,color = "black", position = position_dodge(1), group =x_val, size = 6)
    bar_dist <- geom_bar(stat = "identity", position ="dodge")
  }
  if(paleta == TRUE){
    pal <- c('#191B4F','#1CA4C9','#511C71','#515151','#F9A61F','#178D4B','#AE3E92','#F77F11')
    ggplot(data = datos, aes(x = reorder(x_val, -y_val), y = y_val, fill = category)) + 
    bar_dist+
    ggtitle(title_name)+
    xlab(x_title) + ylab(y_title)+
    scale_fill_manual(values = pal)+
    scale_color_manual(values = pal)+
    theme(plot.title = element_text(hjust = 0.5, vjust = 1,color = "black"), axis.text.x = axis_x)+
    distr_x+
    labs(fill = legend)
  }else{
    print("Problema con los colores")
  }
}


### AGRUPACIONES


coun_porc <- function(datos, col_agp, col_name){
  #
  #Función para obtener conteos y porcentajes
  #datos : dataframe para la obtención de la información
  #col_agp : columna a agrupar
  #col_name : nombre de primer columna 
  #
  a <- datos %>% 
    group_by(!!enquo(col_agp)) %>% 
    count() %>% 
    rename(Casos = n) %>% 
    arrange(desc(Casos)) %>% 
    ungroup() %>%
    mutate( Porcentaje = paste(round(Casos*100/sum(Casos)),'%'))
    colnames(a)[1]<-col_name
    return(a)
}
